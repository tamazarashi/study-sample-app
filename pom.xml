<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>sdgs</groupId>
	<artifactId>hello-app</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>hello-app</name>

	<properties>
		<!-- environment settings -->
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>${maven.compiler.source}</maven.compiler.target>
		<mainClass>sample.HelloApplicationMain</mainClass>
		<!-- library versions -->
		<version.helidon>3.2.1</version.helidon>
		<!-- maven plugin versions -->
		<version.plugin.maven-jar>3.3.0</version.plugin.maven-jar>
		<version.plugin.maven-surefire>3.1.2</version.plugin.maven-surefire>
		<version.plugin.jandex>1.1.0</version.plugin.jandex>
		<version.plugin.helidon-build-tools>2.3.3</version.plugin.helidon-build-tools>
	</properties>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>io.helidon</groupId>
				<artifactId>helidon-dependencies</artifactId>
				<version>${version.helidon}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>io.helidon.microprofile.bundles</groupId>
			<artifactId>helidon-microprofile-core</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jboss</groupId>
			<artifactId>jandex</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.helidon.microprofile.tests</groupId>
			<artifactId>helidon-microprofile-tests-junit5</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.helidon.microprofile.rest-client</groupId>
			<artifactId>helidon-microprofile-rest-client</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.helidon.microprofile</groupId>
			<artifactId>helidon-microprofile-access-log</artifactId>
			<scope>runtime</scope>
		</dependency>
	</dependencies>

	<build>
		<finalName>${project.artifactId}</finalName>

		<plugins>
			<!-- classpathをmainclassを設定したMANIFESTファイル付きのExecutable Jarファイルの作成 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>${version.plugin.maven-jar}</version>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>libs</classpathPrefix>
							<mainClass>${mainClass}</mainClass>
							<useUniqueVersions>false</useUniqueVersions>
						</manifest>
					</archive>
				</configuration>
			</plugin>
			<!-- jarのMANIFESTファイルのclasspahtで指定したlibs配下に依存ライブラリをコピーする -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-libs</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/libs</outputDirectory>
							<overWriteReleases>false</overWriteReleases>
							<overWriteSnapshots>false</overWriteSnapshots>
							<overWriteIfNewer>true</overWriteIfNewer>
							<overWriteIfNewer>true</overWriteIfNewer>
							<includeScope>runtime</includeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Helidonのライセンスファイルのコピー（任意） -->
			<plugin>
				<groupId>io.helidon.build-tools</groupId>
				<artifactId>helidon-maven-plugin</artifactId>
				<version>${version.plugin.helidon-build-tools}</version>
				<executions>
					<execution>
						<id>third-party-license-report</id>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
				<version>0.40.2</version>
				<configuration>
					<registry>ghcr.io</registry>
					<images>
						<image>
							<name>tamazarashi/hello-app</name>
							<build>
								<tags>
									<tag>${image.tag}</tag>
								</tags>
								<contextDir>${project.basedir}</contextDir>
								<cleanup>try</cleanup>
							</build>
						</image>
					</images>
				</configuration>
			</plugin>
		</plugins>
	</build>

  <distributionManagement>
    <repository>
      <id>github</id>
      <name>GitHub Packages</name>
      <url>https://maven.pkg.github.com/tamazarashi/study-sample-app</url>
    </repository>
  </distributionManagement>
</project>
